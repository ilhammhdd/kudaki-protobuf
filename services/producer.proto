syntax = "proto3";
package service.kafka;

option java_package = "entities";

/* 
  uncomment the package path accordingly to corresponding service
*/
// option go_package = "github.com/ilhammhdd/kudaki-gateway-service/entities/services";
// option go_package = "github.com/ilhammhdd/kudaki-event-service/entities/services";
// option go_package = "github.com/ilhammhdd/kudaki-file-service/entities/services";
// option go_package = "github.com/ilhammhdd/kudaki-item-service/entities/services";
// option go_package = "github.com/ilhammhdd/kudaki-mountain-service/entities/services";
// option go_package = "github.com/ilhammhdd/kudaki-rent-service/entities/services";
// option go_package = "github.com/ilhammhdd/kudaki-review-service/entities/services";
// option go_package = "github.com/ilhammhdd/kudaki-shop-service/entities/services";
// option go_package = "github.com/ilhammhdd/kudaki-user-service/entities/services";

message ProducerMessage {
  string topic = 1;
  string key = 2;
  bytes value = 3;
}

message ProducedMetadata {
  string topic = 1;
  int32 partition = 2;
  int64 offset = 3;
}

service Producer {
  rpc SyncProduce(ProducerMessage) returns (ProducedMetadata);
  rpc AsyncProduce(stream ProducerMessage) returns (stream ProducedMetadata);
}
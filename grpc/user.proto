syntax = "proto3";
package rpc;

import "events/status.proto";
import "user/user.proto";
import "user/profile.proto";
import "grpc/status.proto";

option go_package = "github.com/ilhammhdd/kudaki-externals/grpc";

message UserAuthenticationRequested {
  string uid = 1;
  string jwt = 2;
}

message UserAuthenticated {
  string uid = 1;
  event.Status event_status = 2;
  entities.user.User user = 3;
}

message UserAuthorizationRequested {
  string uid = 1;
  entities.user.Role role = 2;
  string jwt = 3;
}

message UserAuthorized {
  string uid = 1;
  event.Status event_status = 2;
  entities.user.User user = 3;
}

service User {
  rpc UserAuthentication(UserAuthenticationRequested)
      returns (UserAuthenticated);
  rpc UserAuthorization(UserAuthorizationRequested)
      returns (UserAuthorized);
}

service UserRepo {
  rpc AddUser (entities.user.User) returns (rpc.Status);
  rpc UpdateUser (entities.user.User) returns (rpc.Status);
  rpc DeleteUser (entities.user.User) returns (rpc.Status);
}

service ProfileRepo {
  rpc AddProfile (entities.user.Profile) returns (rpc.Status);
  rpc UpdateProfile (entities.user.Profile) returns (rpc.Status);
  rpc DeleteProfile (entities.user.Profile) returns (rpc.Status);
}

service UnverifiedUserRepo {
  rpc AddUnverifiedUser (entities.user.UnverifiedUser) returns (rpc.Status);
  rpc UpdateUnverifiedUser (entities.user.UnverifiedUser) returns (rpc.Status);
  rpc DeleteUnverifiedUser (entities.user.UnverifiedUser) returns (rpc.Status);
}